/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import classes.Aeroporto;
import graphs.AirlineConnection;
import graphs.EdgeWeightedSymbolDigraph;

/**
 *
 * @author Modusaleatorios
 */
public class AirportPropertiesPanel extends javax.swing.JPanel
{

    /**
     * Creates new form AirportPropertiesPanel
     */
    public AirportPropertiesPanel()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        txt_AirportName = new javax.swing.JTextField();
        lbl_AirportCode = new javax.swing.JLabel();
        txt_AirportCode = new javax.swing.JTextField();
        ckb_ActiveStatus = new javax.swing.JCheckBox();
        lbl_Location = new javax.swing.JLabel();
        txt_Location = new javax.swing.JTextField();
        lbl_Coordinates = new javax.swing.JLabel();
        txt_Coordinates = new javax.swing.JTextField();
        lbl_Classification = new javax.swing.JLabel();
        txt_Classification = new javax.swing.JTextField();
        lbl_NumberPlanes = new javax.swing.JLabel();
        txt_NumberPlanes = new javax.swing.JTextField();
        lbl_AirlineConnectionsFromThis = new javax.swing.JLabel();
        txt_AirlineConnectionsFromThis = new javax.swing.JTextField();
        lbl_AirlineConnectionsToThis = new javax.swing.JLabel();
        txt_AirlineConnectionsToThis = new javax.swing.JTextField();

        setBackground(new java.awt.Color(229, 242, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder("Airport Properties"));

        txt_AirportName.setEditable(false);
        txt_AirportName.setBackground(new java.awt.Color(203, 229, 255));

        lbl_AirportCode.setText("Airport Code");

        txt_AirportCode.setEditable(false);
        txt_AirportCode.setBackground(new java.awt.Color(219, 237, 255));

        ckb_ActiveStatus.setBackground(new java.awt.Color(229, 242, 255));
        ckb_ActiveStatus.setText("Active");
        ckb_ActiveStatus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ckb_ActiveStatusActionPerformed(evt);
            }
        });

        lbl_Location.setText("Location");

        txt_Location.setEditable(false);
        txt_Location.setBackground(new java.awt.Color(219, 237, 255));

        lbl_Coordinates.setText("Coordinates");

        txt_Coordinates.setEditable(false);
        txt_Coordinates.setBackground(new java.awt.Color(219, 237, 255));

        lbl_Classification.setText("Classification");

        txt_Classification.setEditable(false);
        txt_Classification.setBackground(new java.awt.Color(219, 237, 255));

        lbl_NumberPlanes.setText("N. of Planes");

        txt_NumberPlanes.setEditable(false);
        txt_NumberPlanes.setBackground(new java.awt.Color(219, 237, 255));

        lbl_AirlineConnectionsFromThis.setText("N. of Airline Connections from this Airport");

        txt_AirlineConnectionsFromThis.setEditable(false);
        txt_AirlineConnectionsFromThis.setBackground(new java.awt.Color(219, 237, 255));

        lbl_AirlineConnectionsToThis.setText("N. of Airline Connections to this Airport");

        txt_AirlineConnectionsToThis.setEditable(false);
        txt_AirlineConnectionsToThis.setBackground(new java.awt.Color(219, 237, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_AirportName)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_AirportCode)
                            .addComponent(lbl_Location)
                            .addComponent(lbl_Coordinates)
                            .addComponent(lbl_Classification)
                            .addComponent(lbl_NumberPlanes))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Coordinates)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_AirportCode, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                                .addComponent(ckb_ActiveStatus))
                            .addComponent(txt_Location)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txt_NumberPlanes, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                    .addComponent(txt_Classification))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_AirlineConnectionsToThis)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_AirlineConnectionsToThis, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_AirlineConnectionsFromThis)
                                .addGap(18, 18, 18)
                                .addComponent(txt_AirlineConnectionsFromThis, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_AirportName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_AirportCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_AirportCode)
                    .addComponent(ckb_ActiveStatus))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Location))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Coordinates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Coordinates))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Classification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Classification))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_NumberPlanes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_NumberPlanes))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_AirlineConnectionsFromThis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_AirlineConnectionsFromThis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_AirlineConnectionsToThis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_AirlineConnectionsToThis))
                .addContainerGap(128, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ckb_ActiveStatusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ckb_ActiveStatusActionPerformed
    {//GEN-HEADEREND:event_ckb_ActiveStatusActionPerformed
        this.airport.setActiveStatus(this.ckb_ActiveStatus.isSelected());
        
        for (AirlineConnection edgeIter : ewSymbolDigraph.getEdgeWeightedDirectedGraph().edges())
        {
            if (edgeIter.from() == this.ewSymbolDigraph.indexOf(this.getAirportCode()))
            {
                edgeIter.setActiveStatus(this.ckb_ActiveStatus.isSelected());
            }
            if (edgeIter.to() == this.ewSymbolDigraph.indexOf(this.getAirportCode()))
            {
                edgeIter.setActiveStatus(this.ckb_ActiveStatus.isSelected());
            }
        }
        
        this.shortestPathPanel.setShortestPathConnections();
        this.conexPanel.setConexBoard(this.ewSymbolDigraph);
    }//GEN-LAST:event_ckb_ActiveStatusActionPerformed

    /**Gets the Code of the airport in the panel.
     * @return the String with the airport's code.
     */
    public String getAirportCode()
    {
        return this.txt_AirportCode.getText();
    }
    
    /**Sets the Aeroporto for to be presented in this panel.
     * @param aeroporto the Aeroporto instance.
     */
    public void setAirport(Aeroporto aeroporto)
    {
        this.airport = aeroporto;
        this.txt_AirportName.setText(this.airport.getNome());
        this.txt_AirportCode.setText(this.airport.getIdAeroporto());
        this.ckb_ActiveStatus.setSelected(this.airport.getActiveStatus());
        this.txt_Location.setText(this.airport.getMyCidade().stringCityCountryContinent());
        this.txt_Coordinates.setText(this.airport.getMyCidade().stringCoordinates());
        this.txt_Classification.setText(String.valueOf(this.airport.getClassificacao()));
        this.txt_NumberPlanes.setText(String.valueOf(this.airport.getListagemAvioes().size()));
        this.txt_AirlineConnectionsFromThis.setText(String.valueOf(this.airport.getListAirlineConnectionsFromThis(this.ewSymbolDigraph).size()));
        this.txt_AirlineConnectionsToThis.setText(String.valueOf(this.airport.getListAirlineConnectionsToThis(this.ewSymbolDigraph).size()));
    }
    
    /**Sets the passed on boolean value to the Aeroporto Active Status.
     * @param activeStatus the boolean value to set.
     */
    public void setActiveStatus(boolean activeStatus)
    {
        this.ckb_ActiveStatus.setSelected(activeStatus);
    }
    
    public void setEdgeWeightedSymbolDigraph(EdgeWeightedSymbolDigraph ewsd)
    {
        this.ewSymbolDigraph = ewsd;
    }
    
    public void setShortestPathPanel(GraphShortestPathPanel spPanel)
    {
        this.shortestPathPanel = spPanel;
    }
    
    public void setConexPanel (GraphConexPanel cPanel)
    {
        this.conexPanel = cPanel;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ckb_ActiveStatus;
    private javax.swing.JLabel lbl_AirlineConnectionsFromThis;
    private javax.swing.JLabel lbl_AirlineConnectionsToThis;
    private javax.swing.JLabel lbl_AirportCode;
    private javax.swing.JLabel lbl_Classification;
    private javax.swing.JLabel lbl_Coordinates;
    private javax.swing.JLabel lbl_Location;
    private javax.swing.JLabel lbl_NumberPlanes;
    private javax.swing.JTextField txt_AirlineConnectionsFromThis;
    private javax.swing.JTextField txt_AirlineConnectionsToThis;
    private javax.swing.JTextField txt_AirportCode;
    private javax.swing.JTextField txt_AirportName;
    private javax.swing.JTextField txt_Classification;
    private javax.swing.JTextField txt_Coordinates;
    private javax.swing.JTextField txt_Location;
    private javax.swing.JTextField txt_NumberPlanes;
    // End of variables declaration//GEN-END:variables
    private Aeroporto airport;
    private EdgeWeightedSymbolDigraph ewSymbolDigraph;
    private GraphShortestPathPanel shortestPathPanel;
    private GraphConexPanel conexPanel;
    
}
